# ALIASES :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Create intermediate directories automatically w/ verbose output.
alias mkdir="mkdir -pv"

# Automatically cd to directory after it is created.
alias mkcd='_(){ mkdir $1; cd $1; }; _'

# List all files with long, human-readable info.
alias l='ls -lAhF'

# short-form for common commands
[[ `command -v grep` ]] && alias a="grep --color=auto"
[[ `command -v ack` ]] && alias a=ack
[[ `command -v ag` ]] && alias a=ag
[[ `command -v bundle` ]] && alias b=bundle
[[ `command -v docker` ]] && alias d=docker
[[ `command -v docker` ]] && alias i="docker image"
[[ `command -v docker` ]] && alias c="docker container"
[[ `command -v docker-compose` ]] && alias dcom=docker-compose
[[ `command -v find` ]] && alias f=find
[[ `command -v git` ]] && alias g=git
[[ `command -v kill` ]] && alias k=kill
[[ `command -v ranger` ]] && alias r=ranger
[[ `command -v sudo` ]] && alias s=sudo
[[ `command -v tmux` ]] && alias t=tmux
[[ `command -v vim` ]] && alias v=vim

# short-form for built-in commands
alias e=echo
alias h=history
alias q=exit
alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'


# FUNCTIONS :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Convert to all lowercase characters.
lowercase() {
    echo "$1" | tr 'A-Z' 'a-z'
}  

# Convert to all uppercase characters.
uppercase() {
    echo "$1" | tr 'a-z' 'A-Z'
}  

# Remove spaces.
nospaces() {
    echo "${1// /}"
}  

# Convert spaces to dashes.
dashws() {
    echo ""${1// /-}""
}  

# Convert spaces to underscores.
underscorews() {
    "echo ${1// /_}"
}  

# Remove dashes.
nodashes() {
    echo "${1//-/}"
}  

# Remove parens.
noparens() {
    echo "${1//[\(\)]/}"
}  

# Remove non-alphanumeric characters.
alphanum() {
    echo "${1//[^ _a-zA-Z0-9]/}"
}  

# Remove non-alphanumeric characters. (Keeping dashes)
alphanumdash() {
    echo "${1//[^ -_a-zA-Z0-9]/}"
}  

# Convert to safe user ID string.
userID() {
    : `nospaces "$1"`
    : `noparens "$_"`
    : `alphanum "$_"`
    : `lowercase "$_"`
    echo "$_"
}

# Convert to safe project ID string.
projID() {
    : `nospaces "$1"`
    : `noparens "$_"`
    : `alphanumdash "$_"`
    : `lowercase "$_"`
    echo "$_"
}

# Convert to safe package ID string.
pkgID() {
    : `nospaces "$1"`
    : `noparens "$_"`
    : `projID "$_"`
    : `nodashes "$_"`
    echo "$_"
}


# GENERAL CONFIG ::::::::::::::::::::::::::::::::::::::::::::::::::::

# Enbable smoother scrolling in Firefox.
# Source: https://lists.opensuse.org/opensuse-factory/2017-04/msg00001.html
export MOZ_USE_XINPUT2=1


# INTERACTIVE SHELL CONFIG ::::::::::::::::::::::::::::::::::::::::::::::::::::

# *** Options ***

# Change paths without using 'cd' command
[[ `type shopt` == *'builtin'* ]] && shopt -s autocd # bash
[[ `type setopt 2>/dev/null` == *'builtin'* ]] && setopt autocd  # zsh

# EXIT if not running interactively.
[[ $- != *i* ]] && return

# Increase terminal colors.
[[ -n "$DISPLAY" && "$TERM" = "xterm" ]] && export TERM=xterm-256color


# *** Liquid Prompt ***
# https://github.com/nojhan/liquidprompt

source ~/liquidprompt/liquidprompt


# *** Tmux ***
# https://wiki.archlinux.org/index.php/Tmux

# Attach to existing deattached session or start a new session.
if [[ `command -v tmux` && -z "$TMUX" ]] ;then
    ID="`tmux ls | grep -vm1 attached | cut -d: -f1`" # get the id of a deattached session
    if [[ -z "$ID" ]] ;then # if not available create a new one
        tmux new-session
    else
        tmux attach-session -t "$ID" # if available attach to it
    fi
fi


# *** Pager ***

# Use Vim as default pager
export MANPAGER="env MAN_PN=1 vim -M +MANPAGER -"


# *** Ruby ***

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
[[ -d "$HOME/.rvm/bin" ]] && export PATH="$PATH:$HOME/.rvm/bin"

# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"


# EXTENDED PROFILE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Source personal profile, if present.
[[ -r ~/.personal.sh ]] && . ~/.personal.sh

# Source work profile, if present.
[[ -r ~/.work.sh ]] && . ~/.work.sh


